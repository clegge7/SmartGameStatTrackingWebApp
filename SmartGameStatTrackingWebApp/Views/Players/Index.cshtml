@model IEnumerable<SmartGameStatTrackingWebApp.Models.Player>

@{
    ViewBag.Title = "Players";
}

<link rel="stylesheet" type="text/css" href="~/Content/css/table.css" />
<script src="~/Content/js/lighttablefilter.js"></script>
<script src="~/Content/js/plugins/jquery/jquery-3.3.1.min.js"></script>
<script src="~/Content/js/sortable.js"></script>

<script type="text/javascript">
    var playerModel = @Html.Raw(Json.Encode(Model.OrderBy(x => x.name)));
    $.ajax({
        type: 'POST',
        url: '/Players/GetPlayers',
        dataType: 'json',
        data: {
            playerModel: playerModel
        },
        success: function (data) {
            var i;
            for (i = 0; i < data.length; i++) {
                if (data[i].gamesPlayed != 0) {
                    $('.Players tr:last').after('<tr><th>' + data[i].number + '<th><a href=\"/Players/Details/' + data[i].id + '\">' + data[i].name + '</a></th>' +
                        '<th>' + data[i].team + '</th>' + '<th>' + data[i].gamesPlayed + '</th>' +
                        '<th>' + (data[i].points / data[i].gamesPlayed).toFixed(1) + '</th><th>' + (data[i].rebounds / data[i].gamesPlayed).toFixed(1) + '</th>' +
                        '<th>' + (data[i].assists / data[i].gamesPlayed).toFixed(1) + '</th><th>' + (data[i].blocks / data[i].gamesPlayed).toFixed(1) + '</th>' +
                        '<th>' + (data[i].steals / data[i].gamesPlayed).toFixed(1) + '</th><th>' + (data[i].turnovers / data[i].gamesPlayed).toFixed(1) + '</th>' +
                        '<th>' + (data[i].personalFouls / data[i].gamesPlayed).toFixed(1) + '</th><th>' + (data[i].technicalFouls / data[i].gamesPlayed).toFixed(1) +
                        '</th><th>' + data[i].season + '</th></tr>');
                }
                else {
                    $('.Players tr:last').after('<tr><th>' + data[i].number + '<th><a href=\"/Players/Details/' + data[i].id + '\">' + data[i].name + '</a></th>' +
                        '<th>' + data[i].team + '</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>' + data[i].season + '</th></tr>');
                }
            }
        }
    });

    $(document).ready(function () {
        $(".searchButton").on('click', function (e) {
            var query = $(".light-table-filter").val();
            var category = $(".searchDropdown").val();
            alert("This works");
            $.ajax({
                type: 'POST',
                url: '/Players/PlayerSearch',
                dataType: 'json',
                data: {
                    query: query,
                    category: category
                },
                success: function (data) {
                    alert("nope");
                }
            });
            e.preventDefault();
        });
    });
</script>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<!--<div class="filter" style="padding-bottom:10px;">
    <input type="search" class="light-table-filter" data-table="order-table" placeholder="Search">
    <select class="searchDropdown">
        <option></option>
        <option>Players</option>
        <option>Teams</option>
    </select>
    <button type="button" class="searchButton">Search</button>
</div>-->

<div style="overflow-x:scroll;">
    <table class="Players table order-table sortable">
        <thead>
            <tr class="head">
                <th>
                    @Html.DisplayNameFor(model => model.number)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.team)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.gamesPlayed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.points)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.rebounds)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.assists)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.blocks)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.steals)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.turnovers)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.personalFouls)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.technicalFouls)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.season)
                </th>
            </tr>
        </thead>
    </table>
</div>