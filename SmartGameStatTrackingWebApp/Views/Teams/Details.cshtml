@model SmartGameStatTrackingWebApp.Models.Team

@{
    ViewBag.Title = Model.Name;
}

<button id="follow-button">+ Follow</button>	
<script type="text/javascript" src="~/Content/js/plugins/jquery/jquery-3.3.1.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/Content/css/table.css" />

<script type="text/javascript">
    var teamName = @Html.Raw(Json.Encode(Model.ID));
    var realTeamName = @Html.Raw(Json.Encode(Model.Name));
    $.ajax({
        type: 'POST',
        url: '/Players/GetTeamPlayers2',
        datatype: 'json',
        data: {
            teamName: teamName
        },
        success: function (data) {
            for (i = 0; i < data.length; i++) {
                if (data[i].gamesPlayed != 0) {
                    $('.TeamPlayers tr:last').after('<tr><th>' + data[i].number + '<th><a href=\"/Players/Details/' + data[i].id + '\">' + data[i].name + '</a></th>' +
                        '<th>' + data[i].team + '</th>' + '<th>' + data[i].gamesPlayed + '</th>' +
                        '<th>' + (data[i].points / data[i].gamesPlayed).toFixed(1) + '</th><th>' + (data[i].rebounds / data[i].gamesPlayed).toFixed(1) + '</th>' +
                        '<th>' + (data[i].assists / data[i].gamesPlayed).toFixed(1) + '</th><th>' + (data[i].blocks / data[i].gamesPlayed).toFixed(1) + '</th>' +
                        '<th>' + (data[i].steals / data[i].gamesPlayed).toFixed(1) + '</th><th>' + (data[i].turnovers / data[i].gamesPlayed).toFixed(1) + '</th>' +
                        '<th>' + (data[i].personalFouls / data[i].gamesPlayed).toFixed(1) + '</th><th>' + (data[i].technicalFouls / data[i].gamesPlayed).toFixed(1) +
                        '</th><th>' + data[i].season + '</th></tr>');
                }
                else {
                    $('.TeamPlayers tr:last').after('<tr><th>' + data[i].number + '<th><a href=\"/Players/Details/' + data[i].id + '\">' + data[i].name + '</a></th>' +
                        '<th>' + data[i].team + '</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>' + data[i].season + '</th></tr>');
                }
            }
        }
    });

    $(document).ready(function () {
        $(".createPlayer").on('click', function () {
            $(".playerCreatePartial").css("display", "block");
            $("#team").val(realTeamName);
            $("#Team_ID").val(teamName);
            $("#season").val(2018);
            $(this).hide();
        });

        $.ajax({
            type: 'POST',
            url: '/Teams/IsFollowing',
            datatype: 'json',
            data: {
                teamName: teamName
            },
            success: function (data) {
                if (data === 1) {
                    $("#follow-button").animate({ width: '-=10px' }, 1, function () { });

                    // then now we want the button to expand out to it's full state
                    // The left translation is to keep the button centred with it's longer width
                    $("#follow-button").animate({ width: '+=45px', left: '-=15px' }, 1, function () {
                        $("#follow-button").text("Unfollow");

                        // Animate the background transition from white to green. Using JQuery Color
                        $("#follow-button").animate({
                            backgroundColor: "#2EB82E",
                            borderColor: "#2EB82E"
                        }, 1);
                    });
                }
            }
        });

        $("#follow-button").click(function () {
            if ($("#follow-button").text() == "+ Follow") {
                // *** State Change: To Following ***      
                // We want the button to squish (or shrink) by 10px as a reaction to the click and for it to last 100ms    
                $("#follow-button").animate({ width: '-=10px' }, 100, function () { });

                // then now we want the button to expand out to it's full state
                // The left translation is to keep the button centred with it's longer width
                $("#follow-button").animate({ width: '+=45px', left: '-=15px' }, 300, function () {
                    $("#follow-button").text("Unfollow");

                    // Animate the background transition from white to green. Using JQuery Color
                    $("#follow-button").animate({
                        backgroundColor: "#2EB82E",
                        borderColor: "#2EB82E"
                    }, 1000);
                });

                $.ajax({
                    type: 'POST',
                    url: '/Teams/Follow',
                    datatype: 'json',
                    data: {
                        teamName: teamName
                    },
                    success: function (data) {
                        //alert(data);
                    }
                });
                
            } else {

                // *** State Change: Unfollow ***     
                // Change the button back to it's original state
                $("#follow-button").animate({ width: '-=25px', left: '+=15px' }, 300, function () {
                    $("#follow-button").text("+ Follow");
                    $("#follow-button").css("color", "darkslategray");
                    $("#follow-button").css("background-color", "#ffffff");
                    $("#follow-button").css("border-color", "darkslategray");
                });

                $.ajax({
                    type: 'POST',
                    url: '/Teams/Unfollow',
                    datatype: 'json',
                    data: {
                        teamName: teamName
                    },
                    success: function (data) {
                        //alert(data);
                    }
                });
            }
        });

    });
</script>

<style type="text/css">
    #follow-button {
        color: darkslategray;
        font-family: "Helvetica";
        font-size: 10pt;
        background-color: #ffffff;
        border: 1px solid;
        border-color: darkslategray;
        border-radius: 3px;
        width: 85px;
        height: 30px;
        top: 50px;
        left: 50px;
    }
</style>

<div>
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.wins)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.wins)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.losses)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.losses)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.season)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.season)
        </dd>

        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
            @Html.ActionLink("Back to List", "Index")
        </p>

    </dl>
</div>
<div style="overflow-x:scroll;">
    <table class="TeamPlayers table table-responsive">
        <tr class="head">
            <th>
                Number
            </th>
            <th>
                Player
            </th>
            <th>
                Team
            </th>
            <th>
                GP
            </th>
            <th>
                PPG
            </th>
            <th>
                RPG
            </th>
            <th>
                APG
            </th>
            <th>
                BPG
            </th>
            <th>
                SPG
            </th>
            <th>
                TOPG
            </th>
            <th>
                PFPG
            </th>
            <th>
                TFPG
            </th>
            <th>
                Season
            </th>
        </tr>
    </table>
</div>

<button type="button" class="createPlayer">Add Player</button>

<div class="playerCreatePartial" style="display:none;">
    @{
        @Html.Partial("~/Views/Partials/_PlayerCreate.cshtml", new SmartGameStatTrackingWebApp.Models.Player());
    }
</div>